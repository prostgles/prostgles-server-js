/* This file was generated by Prostgles 
*/ 

 

import { ViewHandler, TableHandler, JoinMaker } from "prostgles-types";

export type TxCB = {
    (t: DBObj): (any | void | Promise<(any | void)>)
};


/* SCHEMA DEFINITON. Table names have been altered to work with Typescript */
export type D_34_42_34 = { 
  "\"*\""?: string;
  "id"?: number;
}
export type D_42 = { 
  "*"?: string;
  "id"?: number;
}
export type Aza = { 
  "t"?: string;
}
export type Ex_j_ins = { 
  "added"?: Date;
  "id"?: number;
  "name"?: string;
  "public"?: string;
}
export type Item_children = { 
  "id"?: number;
  "item_id"?: number;
  "name"?: string;
  "tst"?: Date;
}
export type Items = { 
  "id"?: number;
  "name"?: string;
  "tst"?: Date;
}
export type Items2 = { 
  "hh"?: Array<string>;
  "id"?: number;
  "items_id"?: number;
  "name"?: string;
}
export type Items3 = { 
  "h"?: Array<string>;
  "id"?: number;
  "name"?: string;
}
export type Items4 = { 
  "added"?: Date;
  "id"?: number;
  "name"?: string;
  "public"?: string;
}
export type Items4_pub = { 
  "added"?: Date;
  "id"?: number;
  "name"?: string;
  "public"?: string;
}
export type Planes = { 
  "flight_number"?: string;
  "id"?: number;
  "last_updated"?: number;
  "x"?: number;
  "y"?: number;
}
export type Transaction = { 
  "id"?: string;
}
export type Various = { 
  "added"?: Date;
  "h"?: Array<string>;
  "id"?: number;
  "jsn"?: Object;
  "name"?: string;
  "tsv"?: any;
}
export type Z = { 
  "ccc"?: string;
  "id"?: number;
}

export type JoinMakerTables = {
 "item_children": JoinMaker<Item_children>;
 "items": JoinMaker<Items>;
};

/* DBO Definition. Isomorphic */
export type DBObj = {
  "\"*\"": TableHandler<D_34_42_34> 
  "*": TableHandler<D_42> 
  "aza": TableHandler<Aza> 
  "ex_j_ins": TableHandler<Ex_j_ins> 
  "item_children": TableHandler<Item_children> 
  "items": TableHandler<Items> 
  "items2": TableHandler<Items2> 
  "items3": TableHandler<Items3> 
  "items4": TableHandler<Items4> 
  "items4_pub": TableHandler<Items4_pub> 
  "planes": TableHandler<Planes> 
  "transaction": TableHandler<Transaction> 
  "various": TableHandler<Various> 
  "z": TableHandler<Z> 
  leftJoin: JoinMakerTables;
  innerJoin: JoinMakerTables;
  leftJoinOne: JoinMakerTables;
  innerJoinOne: JoinMakerTables;
};
